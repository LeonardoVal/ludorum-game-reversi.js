{"version":3,"sources":["../src/__prologue__.js","../src/Reversi.js","../src/Othello.js","../src/heuristics.js","../src/__epilogue__.js"],"names":[],"mappings":"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","file":"ludorum-game-reversi.js","sourcesContent":["/** Package wrapper and layout.\n*/\nfunction __init__(base, Sermat, ludorum) { \"use strict\";\n// Import synonyms. ////////////////////////////////////////////////////////////////////////////////\n\tvar declare = base.declare,\n\t\tobj = base.obj,\n\t\tcopy = base.copy,\n\t\traise = base.raise,\n\t\traiseIf = base.raiseIf,\n\t\tIterable = base.Iterable,\n\t\titerable = base.iterable,\n\t\tGame = ludorum.Game,\n\t\tCheckerboard = ludorum.utils.Checkerboard,\n\t\tCheckerboardFromString = ludorum.utils.CheckerboardFromString,\n\t\tUserInterface = ludorum.players.UserInterface;\n\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\n\tvar exports = {\n\t\t__package__: 'ludorum-game-reversi',\n\t\t__name__: 'ludorum_game_reversi',\n\t\t__init__: __init__,\n\t\t__dependencies__: [base, Sermat, ludorum],\n\t\t__SERMAT__: { include: [base, ludorum] }\n\t};\n","/** # Reversi\n\nImplementation of [Reversi](http://en.wikipedia.org/wiki/Reversi) for Ludorum.\n*/\nvar Reversi = exports.Reversi = declare(Game, {\n\tname: 'Reversi',\n\n\t/** The constructor takes the `activePlayer` (`\"Black\"` by default) and a board (initial board\n\tby default). The board is represented by an array of two integers and a string:\n\t`[rows, columns, string]`. The string must have:\n\n\t+ `'W'` for every square occupied by a white piece.\n\t+ `'B'` for every square occupied by a black piece.\n\t+ `'.'` for every empty square.\n\t*/\n\tconstructor: function Othello(activePlayer, board){\n\t\tGame.call(this, activePlayer);\n\t\tthis.board = this.makeBoard.apply(this, board || []);\n\t},\n\n\t/** `makeBoard(rows=8, columns=8, string)` is used to build the initial board.\n\t*/\n\t'dual makeBoard': function makeBoard(rows, columns, string){ //FIXME\n\t\trows = isNaN(rows) ? 8 : +rows;\n\t\tcolumns = isNaN(columns) ? 8 : +columns;\n\t\traiseIf(rows < 4 || columns < 4 || rows % 2 || columns % 2,\n\t\t\t\"An Reversi board must have even dimensions greater than 3.\");\n\t\tif (typeof string === 'string') {\n\t\t\treturn new CheckerboardFromString(rows, columns, string);\n\t\t} else {\n\t\t\treturn new CheckerboardFromString(rows, columns)\n\t\t\t\t.__place__([rows / 2, columns / 2 - 1], \"W\")\n\t\t\t\t.__place__([rows / 2 - 1, columns / 2], \"W\")\n\t\t\t\t.__place__([rows / 2, columns / 2], \"B\")\n\t\t\t\t.__place__([rows / 2 - 1, columns / 2 - 1], \"B\");\n\t\t}\n\t},\n\n\t/** The game is played by two players: Black and White. Black moves first.\n\t*/\n\tplayers: [\"Black\", \"White\"],\n\n\t/** Much of the move calculations are based on the possible lines in the board. These are\n\tcalculated and cached by the `lines(rows, cols)` function.\n\t*/\n\tlines: (function (cache) {\n\t\treturn function lines(rows, cols) {\n\t\t\tvar key = rows +'x'+ cols,\n\t\t\t\tresult = cache[key];\n\t\t\tif (typeof result === 'undefined') {\n\t\t\t\tresult = cache[key] = new Checkerboard(rows, cols).lines().map(function(line) {\n\t\t\t\t\treturn line.toArray();\n\t\t\t\t}, function(line){\n\t\t\t\t\treturn line.length > 2;\n\t\t\t\t}).toArray();\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t})({}),\n\n\t/** Another optimization in the move logic uses regular expressions to match patterns in the\n\tboard. These are predefined as a _class_ member.\n\t*/\n\t__MOVE_REGEXPS__: {\n\t\t\"Black\": [/\\.W+B/g, /BW+\\./g],\n\t\t\"White\": [/\\.B+W/g, /WB+\\./g]\n\t},\n\n\t/** A move always places a piece in an empty square, if and only if by doing so one or more\n\tlines of the opponent's pieces get enclosed between pieces of the active player.\n\t*/\n\tmoves: function moves(player){ //FIXME\n\t\tplayer = player || this.activePlayer();\n\t\tif (this.hasOwnProperty('__moves'+ player +'__')) {\n\t\t\treturn this['__moves'+ player +'__'];\n\t\t}\n\t\tvar board = this.board,\n\t\t\tcoords = {},\n\t\t\tregexps = this.__MOVE_REGEXPS__[player];\n\t\tthis.lines(board.height, board.width).forEach(function(line){\n\t\t\tregexps.forEach(function (regexp) {\n\t\t\t\tboard.asString(line).replace(regexp, function(m, i){\n\t\t\t\t\tvar coord = m.charAt(0) === \".\" ? line[i] : line[m.length - 1 + i];\n\t\t\t\t\tcoords[coord] = coord;\n\t\t\t\t\treturn m;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tvar _moves = [];\n\t\tfor (var id in coords) {\n\t\t\t_moves.push(coords[id]);\n\t\t}\n\t\t_moves = _moves.length > 0 ? obj(player, _moves) : null;\n\t\tif (arguments.length < 1) {\n\t\t\treturn this['__moves'+ player +'__'] = _moves; // Cache the result.\n\t\t}\n\t\treturn _moves;\n\t},\n\n\t/** When the active player encloses one or more lines of opponent's pieces between two of its\n\town, all those are turned into active player's pieces.\n\t*/\n\tnext: function next(moves, haps, update) {\n\t\traiseIf(haps, 'Haps are not required (given ', haps, ')!');\n\t\tvar board = this.board.clone(),\n\t\t\tactivePlayer = this.activePlayer(),\n\t\t\tpiece, valid;\n\t\tif (!moves.hasOwnProperty(activePlayer) || !board.isValidCoord(moves[activePlayer])) {\n\t\t\tthrow new Error(\"Invalid moves \"+ JSON.stringify(moves) +\"!\");\n\t\t} else if (activePlayer == this.players[0]) {\n\t\t\tpiece = \"B\";\n\t\t\tvalid = /^W+B/;\n\t\t} else {\n\t\t\tpiece = \"W\";\n\t\t\tvalid = /^B+W/;\n\t\t}\n\t\tboard.walks(moves[activePlayer], Checkerboard.DIRECTIONS.EVERY).forEach(function (walk){\n\t\t\tvar match = valid.exec(board.asString(walk).substr(1));\n\t\t\tif (match){\n\t\t\t\twalk.toArray().slice(0, match[0].length).forEach(function(coord){\n\t\t\t\t\tboard.__place__(coord, piece);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tif (update) {\n\t\t\tthis.constructor(this.opponent(), [board.height, board.width, board.string]);\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new this.constructor(this.opponent(), [board.height, board.width, board.string]);\n\t\t}\n\t},\n\n\t/** A match ends when the active player cannot move. The winner is the one with more pieces of\n\tits color in the board at the end.\n\t*/\n\tresult: function result() {\n\t\tif (this.moves()) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar weight = {\"W\": -1, \"B\": 1},\n\t\t\t\tres_b = iterable(this.board.string).map(function(m){\n\t\t\t\t\treturn weight[m] || 0;\n\t\t\t\t}).sum();\n\t\t\treturn this.zerosumResult(res_b, \"Black\");\n\t\t}\n\t},\n\n\t/** The actual score is calculated as the difference in piece count. This means that the maximum\n\tvictory (maybe impossible) is to fill the board with pieces of only one colour.\n\t*/\n\tresultBounds: function resultBounds() {\n\t\tvar squareCount = this.board.width * this.board.height;\n\t\treturn [-squareCount, +squareCount];\n\t},\n\n\t// ## Utility methods ##########################################################################\n\n\t/** The game state serialization simply contains the constructor arguments.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: exports.__package__ +'.Reversi',\n\t\tserializer: function serialize_Reversi(obj) {\n\t\t\treturn [obj.activePlayer(), [obj.board.height, obj.board.width, obj.board.string]];\n\t\t}\n\t}\n}); // declare Reversi.\n\n/** Adding Reversi to `ludorum.games`.\n*/\nludorum.games.Reversi = Reversi;\n\n/** Sermat serialization.\n*/\nexports.__SERMAT__.include.push(Reversi);\n","/** # Othello\n\nImplementation of the [Othello variant of Reversi](http://www.worldothello.org/?q=content/reversi-versus-othello)\nfor Ludorum.\n*/\nvar Othello = exports.Othello = declare(Reversi, {\n\tname: 'Reversi',\n\n\t/** One main difference between Reversi and Othello is that is a player has no moves, the turn\n\tpasses to the other player. A match ends only when both players cannot move.\n\t*/\n\tconstructor: function Othello(activePlayer, board){\n\t\tReversi.call(this, activePlayer, board);\n\t\tif (!this.moves()) {\n\t\t\tvar opponent = this.opponent();\n\t\t\tif (this.moves(opponent)) {\n\t\t\t\tthis.activePlayers = [opponent];\n\t\t\t}\n\t\t}\n\t},\n\n\t/** `makeBoard(rows=8, columns=8, string)` is used to build the initial board. The starting\n\tboard of Othello is not empty, like Reversi. The four center squares are defined.\n\t*/\n\t'dual makeBoard': function makeBoard(rows, columns, string){\n\t\trows = isNaN(rows) ? 8 : +rows;\n\t\tcolumns = isNaN(columns) ? 8 : +columns;\n\t\traiseIf(rows < 4 || columns < 4 || rows % 2 || columns % 2, \"An Othello board must have even dimensions greater than 3.\");\n\t\tif (typeof string === 'string') {\n\t\t\treturn new CheckerboardFromString(rows, columns, string);\n\t\t} else {\n\t\t\treturn new CheckerboardFromString(rows, columns)\n\t\t\t\t.__place__([rows / 2, columns / 2 - 1], \"W\")\n\t\t\t\t.__place__([rows / 2 - 1, columns / 2], \"W\")\n\t\t\t\t.__place__([rows / 2, columns / 2], \"B\")\n\t\t\t\t.__place__([rows / 2 - 1, columns / 2 - 1], \"B\");\n\t\t}\n\t},\n\n\t// ## Utility methods ##########################################################################\n\n\t/** The game state serialization simply contains the constructor arguments.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: exports.__package__ +'.Othello',\n\t\tserializer: function serialize_Othello(obj) {\n\t\t\treturn [obj.activePlayer(), [obj.board.height, obj.board.width, obj.board.string]];\n\t\t}\n\t}\n}); // declare Othello.\n\n/** Adding Othello to `ludorum.games`.\n*/\nludorum.games.Othello = Othello;\n\n/** Sermat serialization.\n*/\nexports.__SERMAT__.include.push(Othello);\n","/** # Heuristics for Mancala\n\n`Othello.heuristics` is a bundle of helper functions to build heuristic evaluation functions for\nthis game.\n*/\nvar heuristics = exports.heuristics = {\n\t/** `heuristicFromWeights(weights)` returns an heuristic function that may be used with any\n\theuristic based player. Weights are normalized, so the result is in (-1,+1) (exclusively).\n\t*/\n\theuristicFromWeights: function heuristicFromWeights(weights) {\n\t\tvar weightCount = weights.length,\n\t\t\tweightSum = iterable(weights).map(Math.abs).sum(); // Used to normalize the sum.\n\t\tvar heuristic = function __heuristic__(game, player) {\n\t\t\tvar board = game.board;\n\t\t\traiseIf(board.height * board.width !== weightCount, \"Wrong amount of weights!\");\n\t\t\treturn board.weightedSum(weights, {\n\t\t\t\t'W': player.charAt(0) === 'W' ? 1 : -1,\n\t\t\t\t'B': player.charAt(0) === 'B' ? 1 : -1\n\t\t\t}) / weightSum;\n\t\t};\n\t\theuristic.weights = weights;\n\t\treturn heuristic;\n\t},\n\n\t/** `heuristicFromSymmetricWeights(weights)` is similar to `heuristicFromWeights()` but\n\tinstead of demanding a weight for every square in the board, it uses only the upper left\n\tquadrant and builds the rest by symmetry. Hence only a quarter of the weights is required.\n\t*/\n\theuristicFromSymmetricWeights: function heuristicFromSymmetricWeights(weights, rows, columns) {\n\t\trows = isNaN(rows) ? 8 : rows | 0;\n\t\tcolumns = isNaN(columns) ? 8 : columns | 0;\n\t\tvar width = Math.ceil(rows / 2);\n\t\traiseIf(width * Math.ceil(columns / 2) > weights.length, \"Not enough weights!\");\n\t\tweights = Iterable.range(columns).map(function (column) {\n\t\t\tvar i = column < columns / 2 ? column : columns - column - 1,\n\t\t\t\tleft = i * width,\n\t\t\t\tright = (i + 1) * width;\n\t\t\treturn weights.slice(left, right)\n\t\t\t\t.concat(weights.slice(left, right - rows % 2).reverse());\n\t\t}).flatten().toArray();\n\t\treturn this.heuristicFromWeights(weights);\n\t},\n\n\t/** `pieceRatio(game, player)` is an heuristic criteria based on the difference of the piece\n\tcounts of both players.\n\t*/\n\tpieceRatio: function pieceRatio(game, player) {\n\t\tvar playerPieceCount = 0, opponentPieceCount = 0;\n\t\titerable(game.board.string).forEach(function (sq) {\n\t\t\tif (sq !== '.') {\n\t\t\t\tif (sq === player.charAt(0)) {\n\t\t\t\t\t++playerPieceCount;\n\t\t\t\t} else {\n\t\t\t\t\t++opponentPieceCount;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn (playerPieceCount - opponentPieceCount) / (playerPieceCount + opponentPieceCount) || 0;\n\t},\n\n\t/** `mobilityRatio(game, player)` is an heuristic criteria based on the difference of the\n\tmove counts of both players.\n\t*/\n\tmobilityRatio: function mobilityRatio(game, player) {\n\t\tvar opponent = game.opponent(player),\n\t\t\tplayerMoves = game.moves(player),\n\t\t\topponentMoves = game.moves(opponent),\n\t\t\tplayerMoveCount = playerMoves && playerMoves[player] && playerMoves[player].length || 0,\n\t\t\topponentMoveCount = opponentMoves && opponentMoves[opponent] && opponentMoves[opponent].length || 0;\n\t\treturn (playerMoveCount - opponentMoveCount) / (playerMoveCount + opponentMoveCount) || 0;\n\t}\n};\n\n/** The default heuristic combines piece and mobility ratios with weights that ponder corners and\nborders but penalizes the squares next to the corners.\n*/\nheuristics.defaultHeuristic = ludorum.players.HeuristicPlayer.composite(\n\theuristics.heuristicFromSymmetricWeights(\n\t\t[+9,-3,+3,+3, -3,-3,-1,-1, +3,-1,+1,+1, +3,-1,+1,+1]\n\t), 0.6,\n\theuristics.pieceRatio, 0.2,\n\theuristics.mobilityRatio, 0.2\n);\n","// See __prologue__.js\n\tSermat.include(exports);\n\t\n\treturn exports;\n}\n"]}