//! ludorum-game-reversi 0.1.0

(function(e){"use strict";this["ludorum-game-reversi"]=e(this.base,this.Sermat,this.ludorum)}).call(this,function e(t,r,i){"use strict";var n,a=t.declare,s=t.obj,o=(t.copy,t.raise),h=t.raiseIf,u=t.Iterable,c=t.iterable,_=i.Game,l=i.utils.Checkerboard,d=i.utils.CheckerboardFromString,v=(i.players.UserInterface,{__package__:"ludorum-game-reversi",__name__:"ludorum_game_reversi",__init__:e,__dependencies__:[t,r,i],__SERMAT__:{include:[t,i]}}),f=v.Reversi=a(_,{name:"Reversi",constructor:function(e,t){_.call(this,e),this.board=this.makeBoard.apply(this,t||[])},"dual makeBoard":function(e,t,r){return e=isNaN(e)?8:+e,t=isNaN(t)?8:+t,h(e<4||t<4||e%2||t%2,"An Reversi board must have even dimensions greater than 3."),"string"==typeof r?new d(e,t,r):new d(e,t)},players:["Black","White"],lines:(n={},function(e,t){var r=e+"x"+t,i=n[r];return void 0===i&&(i=n[r]=new l(e,t).lines().map(function(e){return e.toArray()},function(e){return e.length>2}).toArray()),i}),__MOVE_REGEXPS__:{Black:[/\.W+B/g,/BW+\./g],White:[/\.B+W/g,/WB+\./g]},"dual boardCenter":function(e){var t=(e=e||this.board).width,r=e.height;return[[r/2,t/2-1],[r/2-1,t/2],[r/2,t/2],[r/2-1,t/2-1]]},moves:function(e){if(e=e||this.activePlayer(),this.hasOwnProperty("__moves"+e+"__"))return this["__moves"+e+"__"];var t=this.board,r={},i=this.__MOVE_REGEXPS__[e],n=this.boardCenter().filter(function(e){return"."===t.square(e)});if(n.length<1)for(var a in this.lines(t.height,t.width).forEach(function(e){i.forEach(function(i){t.asString(e).replace(i,function(t,i){var n="."===t.charAt(0)?e[i]:e[t.length-1+i];return r[n]=n,t})})}),r)n.push(r[a]);return n=n.length>0?s(e,n):null,arguments.length<1?this["__moves"+e+"__"]=n:n},validMoves:function(e){var t=this.moves();for(var r in t){if(!e.hasOwnProperty(r))return!1;if(!(t[r].join("\n").indexOf(e[r]+"")>=0))return!1}return!0},next:function(e,t,r){h(t,"Haps are not required (given ",t,")!"),this.validMoves(e)||o("Invalid moves "+JSON.stringify(e)+"!");var i,n,a=this.board.clone(),s=this.activePlayer(),u=e[s];return s==this.players[0]?(i="B",n=/^W+B/):(i="W",n=/^B+W/),this.boardCenter().join("\n").indexOf(u+"")>=0?a.__place__(u,i):a.walks(u,l.DIRECTIONS.EVERY).forEach(function(e){var t=n.exec(a.asString(e).substr(1));t&&e.toArray().slice(0,t[0].length).forEach(function(e){a.__place__(e,i)})}),r?(this.constructor(this.opponent(),[a.height,a.width,a.string]),this):new this.constructor(this.opponent(),[a.height,a.width,a.string])},result:function(){if(this.moves())return null;var e={W:-1,B:1},t=c(this.board.string).map(function(t){return e[t]||0}).sum();return this.zerosumResult(t,"Black")},resultBounds:function(){var e=this.board.width*this.board.height;return[-e,+e]},"static __SERMAT__":{identifier:v.__package__+".Reversi",serializer:function(e){return[e.activePlayer(),[e.board.height,e.board.width,e.board.string]]}}});i.games.Reversi=f,v.__SERMAT__.include.push(f);var g=v.Othello=a(f,{name:"Reversi",constructor:function(e,t){if(f.call(this,e,t),!this.moves()){var r=this.opponent();this.moves(r)&&(this.activePlayers=[r])}},"dual makeBoard":function(e,t,r){return e=isNaN(e)?8:+e,t=isNaN(t)?8:+t,h(e<4||t<4||e%2||t%2,"An Othello board must have even dimensions greater than 3."),"string"==typeof r?new d(e,t,r):new d(e,t).__place__([e/2,t/2-1],"W").__place__([e/2-1,t/2],"W").__place__([e/2,t/2],"B").__place__([e/2-1,t/2-1],"B")},"static __SERMAT__":{identifier:v.__package__+".Othello",serializer:function(e){return[e.activePlayer(),[e.board.height,e.board.width,e.board.string]]}}});i.games.Othello=g,v.__SERMAT__.include.push(g);var m=v.heuristics={heuristicFromWeights:function(e){var t=e.length,r=c(e).map(Math.abs).sum(),i=function(i,n){var a=i.board;return h(a.height*a.width!==t,"Wrong amount of weights!"),a.weightedSum(e,{W:"W"===n.charAt(0)?1:-1,B:"B"===n.charAt(0)?1:-1})/r};return i.weights=e,i},heuristicFromSymmetricWeights:function(e,t,r){t=isNaN(t)?8:0|t,r=isNaN(r)?8:0|r;var i=Math.ceil(t/2);return h(i*Math.ceil(r/2)>e.length,"Not enough weights!"),e=u.range(r).map(function(n){var a=n<r/2?n:r-n-1,s=a*i,o=(a+1)*i;return e.slice(s,o).concat(e.slice(s,o-t%2).reverse())}).flatten().toArray(),this.heuristicFromWeights(e)},pieceRatio:function(e,t){var r=0,i=0;return c(e.board.string).forEach(function(e){"."!==e&&(e===t.charAt(0)?++r:++i)}),(r-i)/(r+i)||0},mobilityRatio:function(e,t){var r=e.opponent(t),i=e.moves(t),n=e.moves(r),a=i&&i[t]&&i[t].length||0,s=n&&n[r]&&n[r].length||0;return(a-s)/(a+s)||0}};return m.defaultHeuristic=i.players.HeuristicPlayer.composite(m.heuristicFromSymmetricWeights([9,-3,3,3,-3,-3,-1,-1,3,-1,1,1,3,-1,1,1]),.6,m.pieceRatio,.2,m.mobilityRatio,.2),r.include(v),v});
//# sourceMappingURL=ludorum-game-reversi-tag.min.js.map