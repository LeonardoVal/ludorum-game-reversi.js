//! ludorum-game-reversi 0.0.1

(function(a){"use strict";"function"==typeof define&&define.amd?define(["creatartis-base","sermat","ludorum"],a):"object"==typeof exports&&module.exports?module.exports=a(require("creatartis-base"),require("sermat"),require("ludorum")):this["ludorum-game-reversi"]=a(this.base,this.Sermat,this.ludorum)}).call(this,function a(b,c,d){"use strict";var e=b.declare,f=b.obj,g=(b.copy,b.raise),h=b.raiseIf,i=b.Iterable,j=b.iterable,k=d.Game,l=d.utils.Checkerboard,m=d.utils.CheckerboardFromString,n=(d.players.UserInterface,{__package__:"ludorum-game-reversi",__name__:"ludorum_game_reversi",__init__:a,__dependencies__:[b,c,d],__SERMAT__:{include:[b,d]}}),o=n.Reversi=e(k,{name:"Reversi",constructor:function(a,b){k.call(this,a),this.board=this.makeBoard.apply(this,b||[])},"dual makeBoard":function(a,b,c){return a=isNaN(a)?8:+a,b=isNaN(b)?8:+b,h(a<4||b<4||a%2||b%2,"An Reversi board must have even dimensions greater than 3."),"string"==typeof c?new m(a,b,c):new m(a,b)},players:["Black","White"],lines:function(a){return function(b,c){var d=b+"x"+c,e=a[d];return"undefined"==typeof e&&(e=a[d]=new l(b,c).lines().map(function(a){return a.toArray()},function(a){return a.length>2}).toArray()),e}}({}),__MOVE_REGEXPS__:{Black:[/\.W+B/g,/BW+\./g],White:[/\.B+W/g,/WB+\./g]},"dual boardCenter":function(a){a=a||this.board;var b=a.width,c=a.height;return[[c/2,b/2-1],[c/2-1,b/2],[c/2,b/2],[c/2-1,b/2-1]]},moves:function(a){if(a=a||this.activePlayer(),this.hasOwnProperty("__moves"+a+"__"))return this["__moves"+a+"__"];var b=this.board,c={},d=this.__MOVE_REGEXPS__[a],e=this.boardCenter().filter(function(a){return"."===b.square(a)});if(e.length<1){this.lines(b.height,b.width).forEach(function(a){d.forEach(function(d){b.asString(a).replace(d,function(b,d){var e="."===b.charAt(0)?a[d]:a[b.length-1+d];return c[e]=e,b})})});for(var g in c)e.push(c[g])}return e=e.length>0?f(a,e):null,arguments.length<1?this["__moves"+a+"__"]=e:e},validMoves:function(a){var b=this.moves();for(var c in b){if(!a.hasOwnProperty(c))return!1;var d=b[c].join("\n").indexOf(a[c]+"")>=0;if(!d)return!1}return!0},next:function(a,b,c){h(b,"Haps are not required (given ",b,")!"),this.validMoves(a)||g("Invalid moves "+JSON.stringify(a)+"!");var d,e,f=this.board.clone(),i=this.activePlayer(),j=a[i];return i==this.players[0]?(d="B",e=/^W+B/):(d="W",e=/^B+W/),this.boardCenter().join("\n").indexOf(j+"")>=0?f.__place__(j,d):f.walks(j,l.DIRECTIONS.EVERY).forEach(function(a){var b=e.exec(f.asString(a).substr(1));b&&a.toArray().slice(0,b[0].length).forEach(function(a){f.__place__(a,d)})}),c?(this.constructor(this.opponent(),[f.height,f.width,f.string]),this):new this.constructor(this.opponent(),[f.height,f.width,f.string])},result:function(){if(this.moves())return null;var a={W:-1,B:1},b=j(this.board.string).map(function(b){return a[b]||0}).sum();return this.zerosumResult(b,"Black")},resultBounds:function(){var a=this.board.width*this.board.height;return[-a,+a]},"static __SERMAT__":{identifier:n.__package__+".Reversi",serializer:function(a){return[a.activePlayer(),[a.board.height,a.board.width,a.board.string]]}}});d.games.Reversi=o,n.__SERMAT__.include.push(o);var p=n.Othello=e(o,{name:"Reversi",constructor:function(a,b){if(o.call(this,a,b),!this.moves()){var c=this.opponent();this.moves(c)&&(this.activePlayers=[c])}},"dual makeBoard":function(a,b,c){return a=isNaN(a)?8:+a,b=isNaN(b)?8:+b,h(a<4||b<4||a%2||b%2,"An Othello board must have even dimensions greater than 3."),"string"==typeof c?new m(a,b,c):new m(a,b).__place__([a/2,b/2-1],"W").__place__([a/2-1,b/2],"W").__place__([a/2,b/2],"B").__place__([a/2-1,b/2-1],"B")},"static __SERMAT__":{identifier:n.__package__+".Othello",serializer:function(a){return[a.activePlayer(),[a.board.height,a.board.width,a.board.string]]}}});d.games.Othello=p,n.__SERMAT__.include.push(p);var q=n.heuristics={heuristicFromWeights:function(a){var b=a.length,c=j(a).map(Math.abs).sum(),d=function(d,e){var f=d.board;return h(f.height*f.width!==b,"Wrong amount of weights!"),f.weightedSum(a,{W:"W"===e.charAt(0)?1:-1,B:"B"===e.charAt(0)?1:-1})/c};return d.weights=a,d},heuristicFromSymmetricWeights:function(a,b,c){b=isNaN(b)?8:0|b,c=isNaN(c)?8:0|c;var d=Math.ceil(b/2);return h(d*Math.ceil(c/2)>a.length,"Not enough weights!"),a=i.range(c).map(function(e){var f=e<c/2?e:c-e-1,g=f*d,h=(f+1)*d;return a.slice(g,h).concat(a.slice(g,h-b%2).reverse())}).flatten().toArray(),this.heuristicFromWeights(a)},pieceRatio:function(a,b){var c=0,d=0;return j(a.board.string).forEach(function(a){"."!==a&&(a===b.charAt(0)?++c:++d)}),(c-d)/(c+d)||0},mobilityRatio:function(a,b){var c=a.opponent(b),d=a.moves(b),e=a.moves(c),f=d&&d[b]&&d[b].length||0,g=e&&e[c]&&e[c].length||0;return(f-g)/(f+g)||0}};return q.defaultHeuristic=d.players.HeuristicPlayer.composite(q.heuristicFromSymmetricWeights([9,-3,3,3,-3,-3,-1,-1,3,-1,1,1,3,-1,1,1]),.6,q.pieceRatio,.2,q.mobilityRatio,.2),c.include(n),n});
//# sourceMappingURL=ludorum-game-reversi.min.js.map